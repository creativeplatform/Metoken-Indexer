type Metoken_Transfer {
  id: ID!
  from: String!
  to: String!
  value: BigInt!
}

type Metokens_Burn {
  id: ID!
  meToken: String!
  asset: String!
  burner: String!
  recipient: String!
  meTokensBurned: BigInt!
  assetsReturned: BigInt!
}

type Metokens_CancelResubscribe {
  id: ID!
  meToken: String!
}

type Metokens_CancelTransferMeTokenOwnership {
  id: ID!
  from: String!
  meToken: String!
}

type Metokens_CancelUpdate {
  id: ID!
  event_id: BigInt!
}

type Metokens_ClaimMeTokenOwnership {
  id: ID!
  from: String!
  to: String!
  meToken: String!
}

type Metokens_Deactivate {
  id: ID!
  event_id: BigInt!
}

type Metokens_Donate {
  id: ID!
  meToken: String!
  asset: String!
  donor: String!
  assetsDeposited: BigInt!
}

type Metokens_FinishResubscribe {
  id: ID!
  meToken: String!
}

type Metokens_FinishUpdate {
  id: ID!
  event_id: BigInt!
}

type Metokens_InitResubscribe {
  id: ID!
  meToken: String!
  targetHubId: BigInt!
  migration: String!
  encodedMigrationArgs: String!
}

type Metokens_InitUpdate {
  id: ID!
  event_id: BigInt!
  targetRefundRatio: BigInt!
  targetReserveWeight: BigInt!
  reconfigure: Boolean!
  startTime: BigInt!
  endTime: BigInt!
  endCooldown: BigInt!
}

type Metokens_Mint {
  id: ID!
  meToken: String!
  asset: String!
  depositor: String!
  recipient: String!
  assetsDeposited: BigInt!
  meTokensMinted: BigInt!
}

type Metokens_Register {
  id: ID!
  event_id: BigInt!
  owner: String!
  asset: String!
  vault: String!
  refundRatio: BigInt!
  baseY: BigInt!
  reserveWeight: BigInt!
  encodedVaultArgs: String!
}

type Metokens_SetBurnBuyerFee {
  id: ID!
  rate: BigInt!
}

type Metokens_SetBurnOwnerFee {
  id: ID!
  rate: BigInt!
}

type Metokens_SetMintFee {
  id: ID!
  rate: BigInt!
}

type Metokens_Subscribe {
  id: ID!
  meToken: String!
  owner: String!
  minted: BigInt!
  asset: String!
  assetsDeposited: BigInt!
  name: String!
  symbol: String!
  hubId: BigInt!
}

type Metokens_TransferHubOwnership {
  id: ID!
  event_id: BigInt!
  newOwner: String!
}

type Metokens_TransferMeTokenOwnership {
  id: ID!
  from: String!
  to: String!
  meToken: String!
}

type Metokens_UpdateBalanceLocked {
  id: ID!
  add: Boolean!
  meToken: String!
  amount: BigInt!
}

type Metokens_UpdateBalancePooled {
  id: ID!
  add: Boolean!
  meToken: String!
  amount: BigInt!
}

type Metokens_UpdateBalances {
  id: ID!
  meToken: String!
  newBalance: BigInt!
}

